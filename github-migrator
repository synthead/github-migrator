#!/usr/bin/env ruby

require 'bundler/setup'
Bundler.require(:default)

require_all File.join(__dir__, 'lib')

config_path = File.join(__dir__, 'config', 'issue_handlers.yml')
config = ConfigData.new(config_path)

github = IssueHandlers::Github.new(config['github'])
bitbucket = IssueHandlers::Bitbucket.new(config['bitbucket'])

begin
  print "Fetching issues from Bitbucket repository #{bitbucket.repository}... "
  bitbucket_issues = bitbucket.read_all
  puts "#{bitbucket_issues.length} issues found."

  puts "Creating #{bitbucket_issues.length} issues in GitHub repository" \
    " #{github.repository}..."
  bitbucket_issues.each_with_index do |issue, index|
    github.create(issue)
    puts "[#{index + 1}/#{bitbucket_issues.length}] #{issue[:title]}"
  end

  puts 'Done!'
rescue Github::Error::Unauthorized
  abort('Could not authorize to GitHub!')
rescue Github::Error::NotFound
  abort("GitHub repository \"#{github.repository}\" not found!")
rescue BitBucket::Error::Unauthorized
  abort('Could not authorize to Bitbucket!')
rescue BitBucket::Error::NotFound
  abort("Bitbucket repository \"#{bitbucket.repository}\" not found!")
end
